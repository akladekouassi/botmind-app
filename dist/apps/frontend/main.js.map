{"version":3,"sources":["./libs/service/blogs/src/lib/blogs.service.ts","./libs/blogs/src/lib/containers/edit-blog/edit-blog.component.ts","./libs/blogs/src/lib/containers/edit-blog/edit-blog.component.html","./libs/blogs/src/lib/containers/current-user-blogs/current-user-blogs.component.ts","./libs/blogs/src/lib/containers/current-user-blogs/current-user-blogs.component.html","./libs/material/src/lib/material.module.ts","./libs/service/auth/src/lib/auth.interceptor.ts","./apps/frontend/src/environments/environment.ts","./libs/authentication/src/lib/components/register-form/register-form.component.ts","./libs/authentication/src/lib/components/register-form/register-form.component.html","./libs/authentication/src/lib/containers/login/login.component.ts","./libs/authentication/src/lib/containers/login/login.component.html","./libs/blogs/src/lib/blogs.module.ts","./libs/authentication/src/lib/guards/auth.guard.ts","./libs/blogs/src/lib/components/blog/blog.component.ts","./libs/blogs/src/lib/components/blog/blog.component.html","./apps/frontend/src/app/app.module.ts","./apps/frontend/src/app/app-routing.module.ts","./apps/frontend/src/app/containers/layout/layout.component.ts","./apps/frontend/src/app/containers/layout/layout.component.html","./libs/authentication/src/lib/containers/register/register.component.ts","./libs/authentication/src/lib/containers/register/register.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./libs/service/auth/src/lib/auth.service.ts","./libs/blogs/src/index.ts","./libs/blogs/src/lib/components/edit-blog-form/edit-blog-form.component.ts","./libs/blogs/src/lib/components/edit-blog-form/edit-blog-form.component.html","./libs/authentication/src/index.ts","./libs/blogs/src/lib/containers/blogs/blogs.component.ts","./libs/blogs/src/lib/containers/blogs/blogs.component.html","./libs/blogs/src/lib/containers/add-blog/add-blog.component.ts","./libs/blogs/src/lib/containers/add-blog/add-blog.component.html","./libs/blogs/src/lib/containers/profile/profile.component.ts","./libs/blogs/src/lib/containers/profile/profile.component.html","./libs/blogs/src/lib/components/add-blog-form/add-blog-form.component.ts","./libs/blogs/src/lib/components/add-blog-form/add-blog-form.component.html","./libs/authentication/src/lib/authentication.module.ts","./apps/frontend/src/main.ts","./libs/material/src/index.ts","./libs/service/blogs/src/index.ts","./libs/authentication/src/lib/guards/notAuth.guard.ts","./libs/service/auth/src/index.ts","./libs/authentication/src/lib/components/login-form/login-form.component.ts","./libs/authentication/src/lib/components/login-form/login-form.component.html","./apps/frontend/src/app/app.component.ts","./apps/frontend/src/app/app.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService } from '@botmind-app/service/auth';\nimport { RequestOptions } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../../../apps/frontend/src/environments/environment';\n\nconst headers = new HttpHeaders({ 'Content-type': 'application/json' });\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogsService {\n  userAuthenticated: any;\n  options: RequestOptions;\n\n  constructor(private http: HttpClient, private authService: AuthService, private router: Router) {}\n\n  newBlog(blog: any): Observable<any> {\n    return this.http.post(environment.ADD_NEW_BLOG_API_URL, blog, { headers });\n  }\n\n  // Function to get all blogs from the database\n  getAllBlogs(): any {\n    return this.http.get<any>(environment.GET_ALL_BLOGS_API_URL, { headers });\n  }\n\n  getSingleBlog(id: string): Observable<any> {\n    return this.http.get(environment.GET_SINGLE_BLOG_API_URL + id, { headers });\n  }\n  getBlogsForUser(userID: string): Observable<any> {\n    return this.http.get(environment.GET_BLOGS_FOR_USER_API_URL + userID, { headers });\n  }\n\n  editBlog(blog: any): Observable<any> {\n    return this.http.put(environment.UPDATE_BLOG_API_URL, blog, { headers });\n  }\n\n  deleteBlog(id: string): Observable<any> {\n    return this.http.delete(environment.DELETE_BLOG_API_URL + id, { headers });\n  }\n\n  // Function to like a blog post\n  likeBlog(id: string): Observable<any> {\n    const blogData = { id };\n    return this.http.put(environment.LIKE_A_BLOG_API_URL, blogData, { headers });\n  }\n\n  // Function to dislike a blog post\n  dislikeBlog(id: string): Observable<any> {\n    const blogData = { id };\n    return this.http.put(environment.DISLIKE_A_BLOG_API_URL, blogData, { headers });\n  }\n\n  // Function to post a comment on a blog post\n  postComment(id: string, comment: string): Observable<any> {\n    const blogData = {\n      id,\n      comment: comment,\n    };\n    return this.http.post(environment.COMMENT_A_BLOG_API_URL, blogData, { headers });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'botmind-app-edit-blog',\n  templateUrl: './edit-blog.component.html',\n  styleUrls: ['./edit-blog.component.scss']\n})\nexport class EditBlogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<botmind-app-edit-blog-form></botmind-app-edit-blog-form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogsService } from '@botmind-app/service/blogs';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'botmind-app-current-user-blogs',\n  templateUrl: './current-user-blogs.component.html',\n  styleUrls: ['./current-user-blogs.component.scss'],\n})\nexport class CurrentUserBlogsComponent implements OnInit {\n  blogs: any[] = [];\n  currentUser: any;\n  message;\n  messageClass;\n  foundBlog = false;\n  processing = false;\n  blog;\n  currentUrl;\n  animal: string;\n  name: string;\n  newPost = false;\n  loadingBlogs = false;\n  canDisplayCommentField: boolean = false;\n  canDisplayLikers: boolean = false;\n  canDisplayDislikers: boolean = false;\n  activeIdx: number;\n  form;\n  commentForm;\n  username;\n  blogPosts;\n  newComment = [];\n  enabledComments = [];\n\n  constructor(\n    private blogService: BlogsService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {}\n  ngOnInit(): void {\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n    this.loadBlogs();\n  }\n  loadBlogs() {\n    this.blogService.getBlogsForUser(this.currentUser._id).subscribe(\n      response => {\n        if (response.success) {\n          this.blogs = response.blogs;\n        }\n      },\n      error => {}\n    );\n  }\n\n  canComment(i) {\n    this.activeIdx = i;\n    this.canDisplayDislikers = false;\n    this.canDisplayLikers = false;\n    return this.canDisplayCommentField ? (this.canDisplayCommentField = false) : (this.canDisplayCommentField = true);\n  }\n\n  canDisplayLiker(i) {\n    this.activeIdx = i;\n    this.canDisplayDislikers = false;\n    this.canDisplayCommentField = false;\n    return this.canDisplayLikers ? (this.canDisplayLikers = false) : (this.canDisplayLikers = true);\n  }\n\n  canDisplayDisLikers(i) {\n    this.activeIdx = i;\n    this.canDisplayLikers = false;\n    this.canDisplayCommentField = false;\n    return this.canDisplayDislikers ? (this.canDisplayDislikers = false) : (this.canDisplayDislikers = true);\n  }\n\n  deleteBlog(blogID: string) {\n    this.processing = true;\n    this.blogService.deleteBlog(blogID).subscribe(data => {\n      if (!data.success) {\n        this.toastr.error(data.message, 'SUCCESS');\n      } else {\n        this.loadBlogs();\n        this.toastr.success(data.message, 'SUCCESS');\n      }\n    });\n  }\n}\n","<div class=\"container\">\n    <div flex=\"15\" *ngFor=\"let blog of blogs; let i = index\">\n        <mat-card class=\"example-card\">\n            <div class=\"cardHeader\">\n                <span></span>\n                <!-- <img mat-card-image src=\"./assets/logo.png\" alt=\"Photo of a Shiba Inu\" /> -->\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button [routerLink]=\"['/edit-blog/', blog._id]\" *ngIf=\"currentUser._id === blog.createdBy\" mat-menu-item>\n            <mat-icon>dialpad</mat-icon>\n            <span>Modifier</span>\n          </button>\n\n                    <button (click)=\"deleteBlog(blog._id)\" *ngIf=\"currentUser._id === blog.createdBy\" mat-menu-item>\n            <mat-icon>notifications_off</mat-icon>\n            <span>Supprimer</span>\n          </button>\n                </mat-menu>\n            </div>\n            <mat-card-header>\n                <div mat-card-avatar class=\"avatarImage\"></div>\n                <mat-card-title> {{ blog.title }} </mat-card-title>\n                <!-- <mat-card-subtitle>Card Subtitle</mat-card-subtitle> -->\n            </mat-card-header>\n            <mat-card-content>\n                <h3>\n                    {{ blog.body }}\n                </h3>\n            </mat-card-content>\n            <mat-card-footer>\n                <h3 style=\"margin: 10px\">Publié le:{{ blog.createdAt | date: 'dd/MM/YYYY' }}</h3>\n            </mat-card-footer>\n            <mat-card-actions>\n                <button (click)=\"likeBlog(blog._id)\" mat-stroked-button color=\"primary\">Like: {{ blog.likes }}</button>\n                <button (click)=\"dislikeBlog(blog._id)\" mat-stroked-button color=\"accent\">Dislike: {{ blog.dislikes }}</button>\n                <button (click)=\"canComment(i)\" mat-stroked-button color=\"warn\">\n          Commentaires : {{ blog.comments.length }}\n        </button>\n                <button (click)=\"canDisplayLiker(i)\" mat-stroked-button color=\"warn\">Liké par:</button>\n                <button (click)=\"canDisplayDisLikers(i)\" mat-stroked-button color=\"warn\">Disliké par:</button>\n            </mat-card-actions>\n            <div *ngIf=\"this.canDisplayLikers && i === activeIdx\">\n                <mat-list role=\"list\">\n                    <mat-list-item *ngFor=\"let liker of blog.likedBy\" role=\"listitem\">\n                        *\n                        <h4>{{ liker }}</h4>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n\n            <div *ngIf=\"this.canDisplayDislikers && i === activeIdx\">\n                <mat-list role=\"list\">\n                    <mat-list-item *ngFor=\"let disliker of blog.dislikedBy\" role=\"listitem\">\n                        *\n                        <h4>{{ disliker }}</h4>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n\n            <div *ngIf=\"this.canDisplayCommentField && i === activeIdx\">\n                <mat-list role=\"list\" *ngFor=\"let comment of blog.comments\">\n                    <mat-list-item role=\"listitem\">\n                        <H4>{{ comment.commentator }}:</H4>\n\n                        <span>{{ comment.comment }}</span>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n        </mat-card>\n    </div>\n</div>\n\n<h1 class=\"container\" flex=\"15\" *ngIf=\"blogs.length === 0\">Vous n'avez aucun blog</h1>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAccordion } from '@angular/material/expansion';\n\n// import { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nconst MatModules = [\n  CommonModule,\n  FlexLayoutModule,\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatListModule,\n  // MatAccordion,\n  MatIconModule,\n  MatDialogModule,\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatProgressSpinnerModule,\n  MatMenuModule,\n  MatTableModule,\n  MatSelectModule,\n];\n\n@NgModule({\n  imports: [...MatModules],\n  exports: [...MatModules],\n})\nexport class MaterialModule {}\n\n// @NgModule({\n//   imports: [CommonModule],\n// })\n// export class MaterialModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const idToken = localStorage.getItem('id_token');\n\n    if (idToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', idToken),\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n","\nexport const environment = {\n   production: false,\n   LOCAL_API_URL: \"http://localhost:3001\",\n   PROD_API_URL: \"https://heroku.com\",\n   LOGIN_API_URL: \"http://localhost:3001/login\",\n   LOGOUT_API_URL: \"http://localhost:3001/logout\",\n   CHECKAUTH_API_URL: \"http://localhost:3001/checkAuth\",\n   REGISTER_USER_API_URL: \"http://localhost:3001/users/register\",\n   GET_USER_PROFILE_API_URL: \"http://localhost:3001/users/profile\",\n   UPDATE_USER_PROFILE_API_URL: \"http://localhost:3001/users/updateProfile/\",\n   ADD_NEW_BLOG_API_URL: \"http://localhost:3001/blog/addNewBlog\",\n   GET_ALL_BLOGS_API_URL: \"http://localhost:3001/blog/allBlogs\",\n   GET_SINGLE_BLOG_API_URL: \"http://localhost:3001/blog/singleBlog/\",\n   GET_BLOGS_FOR_USER_API_URL: \"http://localhost:3001/blog/blogs/\",\n   UPDATE_BLOG_API_URL: \"http://localhost:3001/blog/updateBlog\",\n   DELETE_BLOG_API_URL: \"http://localhost:3001/blog/deleteBlog/\",\n   LIKE_A_BLOG_API_URL: \"http://localhost:3001/blog/like\",\n   DISLIKE_A_BLOG_API_URL: \"http://localhost:3001/blog/dislike\",\n   COMMENT_A_BLOG_API_URL: \"http://localhost:3001/blog/comment\",\n   CHECK_EMAIL_API_URL: \"http://localhost:3001/users/checkEmail/\",\n   CHECK_USERNAME_API_URL: \"http://localhost:3001/users/checkUsername/\",\n   DELETE_USER_ACCOUNT_API_URL: \"http://localhost:3001/users/deleteAccount\",\n   GET_ALL_USERS_API_URL: \"http://localhost:3001/users/getAllUsers\",\n   MONGODB_USER_PASS:\"Akladekouassi:Akladekouassi\",\n   MONGODB_URL:\"cluster0.8stux.mongodb.net\",\n   MONGODB_NAME: \"Botmind\",\n   MONGODB_AUTH_SOURCE:\"admin \",\n   MONGODB_AUTH_MECHANISME:\"SCRAM-SHA-1\"\n};\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroupDirective, NgForm, Validators, FormGroup } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { AuthService } from '@botmind-app/service/auth';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'botmind-app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n})\nexport class RegisterFormComponent implements OnInit {\n  form: FormGroup;\n  processing: boolean = false;\n  emailValid: boolean;\n  usernameValid: boolean;\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit(): void {}\n\n  createForm() {\n    this.form = this.formBuilder.group(\n      {\n        email: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(5),\n            Validators.maxLength(30),\n            this.validateEmail,\n          ]),\n        ],\n\n        username: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(15),\n            this.validateOrdinaryText,\n          ]),\n        ],\n\n        password: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(35),\n            this.validatePassword,\n          ]),\n        ],\n        firstName: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(20),\n            this.validateOrdinaryText,\n          ]),\n        ],\n        lastName: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(20),\n            this.validateOrdinaryText,\n          ]),\n        ],\n        phoneNumber: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(20),\n            this.validatePhoneNumber,\n          ]),\n        ],\n\n        confirm: ['', Validators.required],\n      },\n      { validator: this.matchingPasswords('password', 'confirm') }\n    );\n  }\n\n  // Function to disable the registration form\n  disableForm(): void {\n    this.form.controls['email'].disable();\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n    this.form.controls['firstName'].disable();\n    this.form.controls['lastName'].disable();\n    this.form.controls['phoneNumber'].disable();\n    this.form.controls['confirm'].disable();\n  }\n\n  // Function to enable the registration form\n  enableForm(): void {\n    this.form.controls['email'].enable();\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n    this.form.controls['firstName'].enable();\n    this.form.controls['lastName'].enable();\n    this.form.controls['phoneNumber'].enable();\n    this.form.controls['confirm'].enable();\n  }\n\n  // Function to validate e-mail is proper format\n  validateEmail(controls) {\n    const regExp = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validateEmail: true };\n    }\n  }\n\n  // Function to validate username is proper format\n  validatePhoneNumber(controls) {\n    const regExp = new RegExp(\n      /^((\\+\\d{1,3}(-| )?\\(?\\d\\)?(-| )?\\d{1,5})|(\\(?\\d{2,6}\\)?))(-| )?(\\d{3,4})(-| )?(\\d{4})(( x| ext)\\d{1,5}){0,1}$/\n    );\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validatePhoneNumber: true };\n    }\n  }\n\n  validateOrdinaryText(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9 ]+$/);\n\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validateOrdinaryText: true };\n    }\n  }\n\n  validatePassword(controls) {\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validatePassword: true };\n    }\n  }\n\n  matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n      if (group.controls[password].value === group.controls[confirm].value) {\n        return null;\n      } else {\n        return { matchingPasswords: true };\n      }\n    };\n  }\n\n  checkEmail(): void {\n    const regExp = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    if (this.form.get('email').value !== '' && regExp.test(this.form.get('email').value)) {\n      this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\n        if (!data.success) {\n          this.toastr.error(data.message, 'MESSAGE');\n        } else {\n          this.toastr.success(data.message, 'MESSAGE');\n        }\n      });\n    }\n  }\n\n  checkUsername(): void {\n    if (this.form.get('username').value !== '' && this.form.get('username').value.length >= 3) {\n      this.authService.checkUsername(this.form.get('username').value).subscribe(data => {\n        if (!data.success) {\n          this.toastr.error(data.message, 'MESSAGE');\n        } else {\n          this.toastr.success(data.message, 'MESSAGE');\n        }\n      });\n    }\n  }\n\n  // Function to submit form\n  onRegisterSubmit() {\n    this.processing = true;\n    this.disableForm();\n    const user = {\n      email: this.form.get('email').value,\n      username: this.form.get('username').value,\n      password: this.form.get('password').value,\n      lastName: this.form.get('lastName').value,\n      firstName: this.form.get('firstName').value,\n      phoneNumber: this.form.get('phoneNumber').value,\n    };\n\n    this.authService.registerUser(user).subscribe(data => {\n      if (!data.success) {\n        this.toastr.error(data.message, 'MESSAGE');\n        this.processing = false;\n        this.enableForm();\n      } else {\n        this.toastr.success(data.message, 'MESSAGE');\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 2000);\n      }\n    });\n  }\n}\n","<div class=\"container\">\n    <mat-card>\n        <mat-card-title>INSCRIPTION</mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"form\" (submit)=\"onRegisterSubmit()\" fxLayout=\"column\" fxLayoutAlign=\"center none\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Nom</mat-label>\n                    <input type=\"text\" matInput name=\"lastName\" autocomplete=\"off\" placeholder=\"Aklade\" formControlName=\"lastName\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.lastName.errors?.required || form.controls.lastName.dirty\">\n                                Ce champ est obligatoire\n                            </li>\n                            <li *ngIf=\"\n                  (form.controls.lastName.errors?.minlength && form.controls.lastName.dirty) ||\n                  (form.controls.lastName.errors?.maxlength && form.controls.lastName.dirty)\n                \">\n                                Caractères minimum autorisés: 3, Caractères maximum autorisés: 15\n                            </li>\n                            <li *ngIf=\"form.controls.lastName.errors?.validateOrdinaryText && form.controls.lastName.dirty\">\n                                Pas de caractères speciaux autorisés\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Prénom</mat-label>\n                    <input type=\"text\" matInput name=\"firstName\" autocomplete=\"off\" placeholder=\"Kouassi Sosthene\" formControlName=\"firstName\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.firstName.errors?.required || form.controls.firstName.dirty\">\n                                Ce champ est obligatoire\n                            </li>\n                            <li *ngIf=\"\n                  (form.controls.firstName.errors?.minlength && form.controls.firstName.dirty) ||\n                  (form.controls.firstName.errors?.maxlength && form.controls.firstName.dirty)\n                \">\n                                Caractères minimum autorisés: 3, Caractères maximum autorisés: 15\n                            </li>\n                            <li *ngIf=\"form.controls.firstName.errors?.validateOrdinaryText && form.controls.firstName.dirty\">\n                                Pas de caractères speciaux autorisés\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Numero de téléphone</mat-label>\n                    <input type=\"tel\" matInput name=\"phoneNumber\" autocomplete=\"off\" placeholder=\"+2250778942837\" formControlName=\"phoneNumber\" />\n                    <mat-error *ngIf=\"form.controls.phoneNumber.errors?.required || form.controls.phoneNumber.dirty\">\n                        Entrez un numéro de téléphone valide\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Identifiant</mat-label>\n                    <input type=\"text\" matInput name=\"username\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Username\" formControlName=\"username\" (blur)=\"checkUsername()\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.username.errors?.required || form.controls.username.dirty\">\n                                L'identifiant est obligatoire\n                            </li>\n                            <li *ngIf=\"\n                  (form.controls.username.errors?.minlength && form.controls.username.dirty) ||\n                  (form.controls.username.errors?.maxlength && form.controls.username.dirty)\n                \">\n                                Caractères minimum autorisés: 3, Caractères Maximum autorisés: 15\n                            </li>\n                            <li *ngIf=\"form.controls.username.errors?.validateOrdinaryText && form.controls.username.dirty\">\n                                L'identifiant ne doit pas contenir de caractères spéciaux!\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Email</mat-label>\n                    <input type=\"email\" matInput name=\"email\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*akladekouassi@gmail.com\" formControlName=\"email\" (blur)=\"checkEmail()\" />\n                    <mat-error>\n                        <ul class=\"help-block\">\n                            <li *ngIf=\"form.controls.email.errors?.required || form.controls.email.dirty\">L\"email est obligatoire</li>\n                            <li *ngIf=\"\n                  (form.controls.email.errors?.minlength && form.controls.email.dirty) ||\n                  (form.controls.email.errors?.maxlength && form.controls.email.dirty)\n                \">\n                                Caractères minimum autorisés: 5, Caractères Maximum autorisés: 30\n                            </li>\n                            <li *ngIf=\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\">\n                                Veillez saisir un email valide\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- Password Input -->\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Mot de passe</mat-label>\n                    <input matInput type=\"password\" name=\"password\" autocomplete=\"off\" placeholder=\"***********\" formControlName=\"password\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">\n                                Le mot de passe est obligatoire\n                            </li>\n                            <li *ngIf=\"\n                  (form.controls.password.errors?.minlength && form.controls.password.dirty) ||\n                  (form.controls.password.errors?.maxlength && form.controls.password.dirty)\n                \">\n                                Caractères minimum autorisés: 8, Caractères Maximum autorisés: 35\n                            </li>\n                            <li *ngIf=\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\">\n                                Une lettre majuscule au moins, un chiffre au moins et un caractère spécial au moins\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Mot de passe</mat-label>\n                    <input type=\"password\" matInput name=\"confirm\" autocomplete=\"off\" placeholder=\"************\" formControlName=\"confirm\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\">\n                                Veuillez confirmer le mot de passe\n                            </li>\n                            <li *ngIf=\"form.errors?.matchingPasswords && form.controls.confirm.dirty\">Password do not match</li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <button mat-raised-button [disabled]=\"!form.valid || processing\" (submit)=\"onRegisterSubmit()\" type=\"submit\" class=\"btn btn-primary\">\n          Valider\n        </button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'botmind-app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<botmind-app-login-form></botmind-app-login-form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; // Added\nimport { MaterialModule } from '@botmind-app/material';\nimport { BlogsComponent } from './containers/blogs/blogs.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { AuthGuard } from '@botmind-app/authentication';\nimport { AuthService, AuthInterceptor } from '@botmind-app/service/auth';\nimport { BlogsService } from '@botmind-app/service/blogs';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AddBlogComponent } from './containers/add-blog/add-blog.component';\nimport { EditBlogFormComponent } from './components/edit-blog-form/edit-blog-form.component';\nimport { EditBlogComponent } from './containers/edit-blog/edit-blog.component';\nimport { AddBlogFormComponent } from './components/add-blog-form/add-blog-form.component';\nimport { CurrentUserBlogsComponent } from './containers/current-user-blogs/current-user-blogs.component';\nimport { ProfileComponent } from './containers/profile/profile.component';\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    // HttpClientModule,\n    // HttpModule,\n    ToastrModule.forRoot(),\n    RouterModule,\n    // RouterModule.forChild([{ path: '', component: BlogsComponent }]),\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    BlogsComponent,\n    BlogComponent,\n\n    AddBlogComponent,\n    AddBlogFormComponent,\n    EditBlogFormComponent,\n    EditBlogComponent,\n    CurrentUserBlogsComponent,\n    ProfileComponent,\n  ],\n  providers: [\n    AuthGuard,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    ,\n    BlogsService,\n  ],\n})\nexport class BlogsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from '@botmind-app/service/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  redirectUrl;\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.redirectUrl = state.url;\n      this.router.navigate(['auth/login']);\n      return false;\n    }\n  }\n}\n","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { BlogsService } from '@botmind-app/service/blogs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '@botmind-app/service/auth';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Blog, User } from 'libs/data-models';\nimport { Observable } from 'rxjs';\nexport interface DialogData {\n  animal: 'panda' | 'unicorn' | 'lion';\n}\n@Component({\n  selector: 'botmind-app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss'],\n})\nexport class BlogComponent implements OnInit {\n  blogs: Blog[];\n  processing = false;\n  currentUrl;\n  currentUser;\n  canDisplayCommentField: boolean = false;\n  canDisplayLikers: boolean = false;\n  canDisplayDislikers: boolean = false;\n  loadingBlogs = false;\n  form;\n  commentForm;\n  newComment = [];\n  enabledComments = [];\n  users: User[] = [];\n  activeIdx: number;\n\n  constructor(\n    private blogService: BlogsService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private authService: AuthService\n  ) {\n    this.createCommentForm();\n  }\n\n  // Function to post a new comment on blog post\n  draftComment(id) {\n    this.commentForm.reset();\n    this.newComment = [];\n    this.newComment.push(id);\n  }\n\n  // Function to cancel new post transaction\n  cancelSubmission(id) {\n    const index = this.newComment.indexOf(id);\n    this.newComment.splice(index, 1);\n    this.commentForm.reset();\n    this.enableCommentForm();\n    this.processing = false;\n  }\n\n  reloadBlogs() {\n    this.loadingBlogs = true;\n    this.loadBlogs();\n    setTimeout(() => {\n      this.loadingBlogs = false;\n    }, 4000);\n  }\n  canComment(i) {\n    this.activeIdx = i;\n    this.canDisplayDislikers = false;\n    this.canDisplayLikers = false;\n    return this.canDisplayCommentField ? (this.canDisplayCommentField = false) : (this.canDisplayCommentField = true);\n  }\n\n  canDisplayLiker(i) {\n    this.activeIdx = i;\n    this.canDisplayDislikers = false;\n    this.canDisplayCommentField = false;\n    return this.canDisplayLikers ? (this.canDisplayLikers = false) : (this.canDisplayLikers = true);\n  }\n\n  canDisplayDisLikers(i) {\n    this.activeIdx = i;\n    this.canDisplayLikers = false;\n    this.canDisplayCommentField = false;\n    return this.canDisplayDislikers ? (this.canDisplayDislikers = false) : (this.canDisplayDislikers = true);\n  }\n\n  // Create form for posting comments\n  createCommentForm(): void {\n    this.commentForm = this.formBuilder.group({\n      comment: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(200)])],\n    });\n  }\n\n  // Enable the comment form\n  enableCommentForm(): void {\n    this.commentForm.get('comment').enable();\n  }\n\n  // Disable the comment form\n  disableCommentForm(): void {\n    this.commentForm.get('comment').disable();\n  }\n\n  getBlogAutor(id: string): string | string[] {\n    if (id === this.currentUser._id) {\n      return 'Moi';\n    } else {\n      return this.users.filter((user: any) => user._id === id).map((user: any) => user.username);\n    }\n  }\n\n  loadUsers() {\n    return this.authService.getAllUsers().subscribe(response => {\n      this.users = response.users;\n    });\n  }\n\n  loadBlogs() {\n    this.blogService.getAllBlogs().subscribe(\n      response => {\n        if (response.success) {\n          this.blogs = response.blogs;\n        }\n      },\n      error => {}\n    );\n  }\n\n  deleteBlog(blogID: string) {\n    if (window.confirm('Voulez vous vraiment supprimer cet blog?')) {\n      this.processing = true;\n      this.blogService.deleteBlog(blogID).subscribe(data => {\n        if (!data.success) {\n          this.toastr.error(data.message, 'SUCCESS');\n        } else {\n          this.loadBlogs();\n          this.toastr.success(data.message, 'SUCCESS');\n        }\n      });\n    }\n  }\n\n  // Function to like a blog post\n  likeBlog(id) {\n    this.blogService.likeBlog(id).subscribe(data => {\n      if (!data.success) {\n        this.toastr.error(data.message, 'ERROR');\n      } else {\n        this.loadBlogs();\n        this.toastr.success(data.message, 'SUCCESS');\n      }\n    });\n  }\n\n  // Function to disliked a blog post\n  dislikeBlog(id) {\n    // Service to dislike a blog post\n    this.blogService.dislikeBlog(id).subscribe(data => {\n      if (!data.success) {\n        this.toastr.error(data.message, 'ERROR');\n      } else {\n        this.loadBlogs();\n        this.toastr.success(data.message, 'SUCCESS');\n      }\n    });\n  }\n\n  // Function to post a new comment\n  postComment(id: string) {\n    this.disableCommentForm();\n    this.processing = true;\n    const comment = this.commentForm.get('comment').value;\n    this.blogService.postComment(id, comment).subscribe(data => {\n      if (data.success) {\n        this.toastr.success(data.message, 'SUCCESS');\n        this.loadBlogs();\n        const index = this.newComment.indexOf(id);\n        this.newComment.splice(index, 1);\n        this.enableCommentForm();\n        this.commentForm.reset();\n        this.processing = false;\n      } else {\n        this.toastr.error(data.message, 'ERROR');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n    this.loadBlogs();\n    this.loadUsers();\n  }\n}\n","<div class=\"container\">\n    <div flex=\"15\" *ngFor=\"let blog of blogs; let i = index\">\n        <mat-card class=\"example-card\">\n            <div class=\"cardHeader\">\n                <span></span>\n                <!-- <img mat-card-image src=\"./assets/logo.png\" alt=\"Photo of a Shiba Inu\" /> -->\n                <div *ngIf=\"currentUser?._id === blog.createdBy\">\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button [routerLink]=\"['/edit-blog/', blog._id]\" *ngIf=\"currentUser?._id === blog.createdBy\" mat-menu-item>\n              <span>Modifier</span>\n            </button>\n\n                        <button (click)=\"deleteBlog(blog._id)\" *ngIf=\"currentUser._id === blog.createdBy\" mat-menu-item>\n              <span>Supprimer</span>\n            </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <mat-card-header>\n                <div mat-card-avatar class=\"avatarImage\"></div>\n                <mat-card-title> {{ blog.title }} </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <h3>\n                    {{ blog.body }}\n                </h3>\n            </mat-card-content>\n            <mat-card-footer>\n                <div class=\"cardHeader\">\n                    <h3>Publié le: {{ blog.createdAt | date: 'dd/MM/YYYY' }}</h3>\n                    <h3>Publié par: {{ getBlogAutor(blog.createdBy) }}</h3>\n                </div>\n            </mat-card-footer>\n\n            <mat-card-actions>\n                <button (click)=\"likeBlog(blog._id)\" mat-stroked-button color=\"primary\">Like: {{ blog.likes }}</button>\n                <button (click)=\"dislikeBlog(blog._id)\" mat-stroked-button color=\"accent\">Dislike: {{ blog.dislikes }}</button>\n                <button (click)=\"canComment(i)\" mat-stroked-button color=\"warn\">\n          {{ blog.createdBy === this.currentUser?._id ? 'Commentaires' : 'Commenter' }} : {{ blog.comments.length }}\n        </button>\n                <button (click)=\"canDisplayLiker(i)\" mat-stroked-button color=\"warn\">Liké par:</button>\n                <button (click)=\"canDisplayDisLikers(i)\" mat-stroked-button color=\"warn\">Disliké par:</button>\n            </mat-card-actions>\n            <div *ngIf=\"this.canDisplayLikers && i === activeIdx\">\n                <mat-list role=\"list\">\n                    <mat-list-item *ngFor=\"let liker of blog.likedBy\" role=\"listitem\">\n                        *\n                        <h4>{{ liker }}</h4>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n\n            <div *ngIf=\"this.canDisplayDislikers && i === activeIdx\">\n                <mat-list role=\"list\">\n                    <mat-list-item *ngFor=\"let disliker of blog.dislikedBy\" role=\"listitem\">\n                        *\n                        <h4>{{ disliker }}</h4>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n            <form [formGroup]=\"commentForm\" *ngIf=\"this.canDisplayCommentField && i === activeIdx\" class=\"example-form\">\n                <div *ngFor=\"let comment of blog.comments\">\n                    <mat-list role=\"list\">\n                        <mat-list-item role=\"listitem\">\n                            <div>\n                                <H4>{{ comment.commentator }}:</H4>\n                            </div>\n                            <div>{{ comment.comment }}</div>\n                        </mat-list-item>\n                    </mat-list>\n                </div>\n                <div *ngIf=\"this.currentUser?._id !== blog.createdBy\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Leave a comment</mat-label>\n                        <textarea matInput name=\"comment\" formControlName=\"comment\" placeholder=\"Ex. It makes me feel...\"></textarea>\n                        <ul class=\"help-block\">\n                            <li *ngIf=\"commentForm.controls.comment.errors?.required && commentForm.controls.comment.dirty\">\n                                This field is required.\n                            </li>\n                            <li *ngIf=\"\n                  (commentForm.controls.comment.errors?.maxlength && commentForm.controls.comment.dirty) ||\n                  (commentForm.controls.comment.errors?.minlength && commentForm.controls.comment.dirty)\n                \">\n                                Comment must be at least 1 character but no more than 200.\n                            </li>\n                        </ul>\n                    </mat-form-field>\n                    <button [disabled]=\"!commentForm.valid || processing\" type=\"submit\" name=\"button\" (click)=\"postComment(blog._id)\" mat-stroked-button color=\"warn\">\n            Publier\n          </button>\n                </div>\n            </form>\n        </mat-card>\n    </div>\n    <!--  -->\n</div>\n\n<div *ngIf=\"blogs.length === 0\" class=\"container\">\n    <h1>AUCUN ARTICLE PUBLIÉ</h1>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; // Added\nimport { MaterialModule } from '@botmind-app/material';\nimport { AppComponent } from './app.component';\nimport { AuthenticationModule } from '@botmind-app/authentication';\nimport { BlogsModule } from '@botmind-app/blogs';\nimport { LayoutComponent } from './containers/layout/layout.component';\nimport { AuthService } from '@botmind-app/service/auth';\nimport { BlogsService } from '@botmind-app/service/blogs';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NotAuthGuard, AuthGuard } from '@botmind-app/authentication';\n\n@NgModule({\n  declarations: [AppComponent, LayoutComponent],\n  imports: [\n    BrowserModule,\n    // CommonModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationModule,\n    BlogsModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpModule,\n    ToastrModule.forRoot(),\n  ],\n  exports: [MaterialModule],\n  providers: [AuthGuard, AuthService, BlogsService, NotAuthGuard],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { LoginComponent, RegisterComponent, NotAuthGuard, AuthGuard } from '@botmind-app/authentication';\r\nimport { BlogsComponent } from '@botmind-app/blogs';\r\nimport {\r\n  AddBlogFormComponent,\r\n  CurrentUserBlogsComponent,\r\n  EditBlogComponent,\r\n  ProfileComponent,\r\n} from '@botmind-app/blogs';\r\n\r\n// Our Array of Angular 2 Routes\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'auth/register',\r\n    component: RegisterComponent,\r\n    canActivate: [NotAuthGuard],\r\n  },\r\n  {\r\n    path: 'auth/login',\r\n    component: LoginComponent,\r\n    canActivate: [NotAuthGuard],\r\n  },\r\n  {\r\n    path: 'blogs',\r\n    component: BlogsComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'blogs/add',\r\n    component: AddBlogFormComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'blogs/users/:id',\r\n    component: CurrentUserBlogsComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'edit-blog/:id',\r\n    component: EditBlogComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: '**', redirectTo: 'auth/login' },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@botmind-app/service/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'botmind-app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  user: any;\n  constructor(public authService: AuthService, private router: Router, private toastr: ToastrService) {}\n\n  onLogoutClick() {\n    this.authService.logout().subscribe(response => {\n      if (response.success) {\n        this.toastr.success(response.message, 'SUCCESS');\n        this.router.navigate(['/auth/login']);\n      }\n    });\n  }\n\n  getUser() {\n    this.authService.getProfile().subscribe(response => (this.user = response.user));\n  }\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n}\n","<mat-toolbar color=\"primary\" fxLayout=\"row\">\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n    <span>BOTMIND BLOG</span>\n    <span class=\"example-spacer\"></span>\n\n    <section>\n        <div>\n            <button *ngIf=\"authService?.isLoggedIn()\" routerLink=\"/blogs\" routerLinkActive=\"active\" mat-button>\n        Accueil\n      </button>\n\n            <button *ngIf=\"authService?.isLoggedIn()\" mat-button class=\"mat-select-arrow-wrapper\" [matMenuTriggerFor]=\"menu\">\n        {{ this.user?.firstName }} {{ this.user?.lastName }} <mat-icon>filter_list</mat-icon>\n      </button>\n            <mat-menu #menu=\"matMenu\">\n                <button routerLink=\"/blogs/add\" mat-menu-item>Ajouter un blog</button>\n                <button routerLink=\"profile\" mat-menu-item>Mon profil</button>\n                <button [routerLink]=\"['/blogs/users/', this.user?._id]\" routerLinkActive=\"active\" mat-menu-item>\n          Voire mes blogs\n        </button>\n                <button (click)=\"onLogoutClick()\" mat-menu-item>Deconnexion</button>\n            </mat-menu>\n            <button *ngIf=\"!authService.isLoggedIn()\" routerLink=\"/auth/login\" routerLinkActive=\"active\" mat-button>\n        Connexion\n      </button>\n            <button *ngIf=\"!authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{ exact: true }\" routerLink=\"/auth/register\" routerLinkActive=\"active\" mat-button>\n        Inscription\n      </button>\n        </div>\n    </section>\n</mat-toolbar>\n<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'botmind-app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<botmind-app-register-form></botmind-app-register-form>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { User } from 'libs/data-models';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../../apps/frontend/src/environments/environment';\nconst headers = new HttpHeaders({ 'Content-type': 'application/json' });\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: string;\n  userAuthenticated: any;\n  options: RequestOptions;\n\n  constructor(private http: Http, private httpClient: HttpClient) {\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json', // Format set to JSON\n      }),\n    });\n  }\n\n  // Function to get token from client local storage\n  loadCurrentUser(): Observable<any> {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  // Function to register user accounts\n  registerUser(user: any): Observable<any> {\n    return this.http.post(environment.REGISTER_USER_API_URL, user, this.options).pipe(map(res => res.json()));\n  }\n\n  // Function to register user accounts\n  modifyProfile(user: any, userID: string): Observable<any> {\n    return this.httpClient.post(environment.UPDATE_USER_PROFILE_API_URL + userID, user, { headers });\n  }\n  // Function to register user accounts\n  deleteAccount(username: any, email: string): Observable<any> {\n    return this.httpClient.post(environment.LOCAL_API_URL + '/users/deleteAccount', { username, email }, { headers });\n  }\n\n  // Function to check if username is taken\n  checkUsername(username: string): Observable<any> {\n    return this.http.get(environment.CHECK_USERNAME_API_URL + username, this.options).pipe(map(res => res.json()));\n  }\n\n  // Function to check if e-mail is taken\n  checkEmail(email: string): Observable<any> {\n    return this.http.get(environment.CHECK_EMAIL_API_URL + email, this.options).pipe(map(res => res.json()));\n  }\n\n  // Function to login user\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(environment.LOGIN_API_URL, { username, password }).pipe(map(res => res.json()));\n  }\n\n  // Function to logout\n  logout() {\n    localStorage.clear();\n    return this.http.post(environment.LOGOUT_API_URL, {}).pipe(map(res => res.json()));\n  }\n\n  getAllUsers(): Observable<any> {\n    return this.httpClient.get<User[]>(environment.LOCAL_API_URL + '/users/getAllUsers', { headers });\n  }\n\n  // Function to store user's data in client local storage\n  storeUserData(user: any) {\n    const expiresAt = moment().add(Number.parseInt(user.expiresIn), 'days');\n    localStorage.setItem('user', JSON.stringify(user.user));\n    localStorage.setItem('id_token', user.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  public isLoggedIn() {\n    return moment().isBefore(this.getExpiration(), 'second');\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    if (expiration) {\n      const expiresAt = JSON.parse(expiration);\n      return moment(expiresAt);\n    } else {\n      return moment();\n    }\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n\n  // Function to get user's profile data\n  getProfile(): Observable<any> {\n    return this.httpClient.get(environment.GET_USER_PROFILE_API_URL, { headers });\n  }\n\n  // Function to check if user is logged in\n  loggedIn() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user;\n  }\n}\n","export * from './lib/blogs.module';\nexport * from './lib/containers/blogs/blogs.component';\nexport * from './lib/components/add-blog-form/add-blog-form.component';\nexport * from './lib/components/edit-blog-form/edit-blog-form.component';\nexport * from './lib/containers/edit-blog/edit-blog.component';\nexport * from './lib/containers/current-user-blogs/current-user-blogs.component';\nexport * from './lib/containers/profile/profile.component';\n// export { DialogModal } from './lib/components/blog/blog.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogsService } from '@botmind-app/service/blogs';\nimport { ToastrService } from 'ngx-toastr';\nimport { Blog } from 'libs/data-models/blogModels';\n\n@Component({\n  selector: 'botmind-app-edit-blog-form',\n  templateUrl: './edit-blog-form.component.html',\n  styleUrls: ['./edit-blog-form.component.scss'],\n})\nexport class EditBlogFormComponent implements OnInit {\n  blog: Blog;\n  processing = false;\n  currentUrl;\n  loading: boolean = true;\n  form: FormGroup;\n\n  constructor(\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private blogService: BlogsService,\n    public router: Router,\n    private toastr: ToastrService,\n    private formBuilder: FormBuilder\n  ) {\n    this.createNewBlogForm();\n  }\n\n  createNewBlogForm() {\n    this.form = this.formBuilder.group({\n      title: ['', Validators.compose([Validators.required, Validators.maxLength(80), Validators.minLength(5)])],\n      body: ['', Validators.compose([Validators.required, Validators.maxLength(500), Validators.minLength(5)])],\n    });\n  }\n\n  enableFormNewBlogForm() {\n    this.form.get('title').enable();\n    this.form.get('body').enable();\n  }\n\n  // Disable new blog form\n  disableFormNewBlogForm() {\n    this.form.get('title').disable();\n    this.form.get('body').disable();\n  }\n\n  // Function to Submit Update\n  updateBlogSubmit() {\n    const blog = {\n      title: this.form.get('title').value,\n      body: this.form.get('body').value,\n      _id: this.currentUrl.id,\n    };\n    this.processing = true;\n    this.blogService.editBlog(blog).subscribe(data => {\n      if (!data.success) {\n        this.toastr.error(data.message, 'error');\n        this.processing = false;\n      } else {\n        this.toastr.success(data.message, 'error');\n        setTimeout(() => {\n          this.router.navigate(['/blogs']);\n        }, 2000);\n      }\n    });\n  }\n\n  // Function to go back to previous page\n  goBack() {\n    this.location.back();\n  }\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params;\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\n      if (!data.success) {\n      } else {\n        this.form.get('title').setValue(data.blog.title);\n        this.form.get('body').setValue(data.blog.body);\n        this.loading = false;\n      }\n    });\n  }\n}\n","<div class=\"container\">\n    <mat-card>\n        <mat-card-title>AJOUTER UN BLOG</mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"form\" name=\"blogForm\" (submit)=\"updateBlogSubmit()\" fxLayout=\"column\" fxLayoutAlign=\"center none\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Titre du blog</mat-label>\n                    <input matInput [disabled]=\"processing\" type=\"text\" name=\"title\" placeholder=\"*Blog Title\" class=\"form-control\" formControlName=\"title\" />\n                    <mat-error>\n                        <ul class=\"help-block\">\n                            <li *ngIf=\"form.controls.title.dirty && form.controls.title.errors?.required\">This field is required.</li>\n                            <li *ngIf=\"\n                  (form.controls.title.dirty && form.controls.title.errors?.minlength) ||\n                  (form.controls.title.dirty && form.controls.title.errors?.maxlength)\n                \">\n                                Max length: 50, Min length: 5\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Contenu du blog</mat-label>\n                    <textarea matInput [disabled]=\"processing\" name=\"body\" rows=\"8\" cols=\"80\" placeholder=\"*Blog Body\" formControlName=\"body\"></textarea>\n\n                    <mat-error>\n                        <ul class=\"help-block\">\n                            <li *ngIf=\"form.controls.body.dirty && form.controls.body.errors?.required\">This field is required.</li>\n                            <li *ngIf=\"\n                  (form.controls.body.dirty && form.controls.body.errors?.minlength) ||\n                  (form.controls.body.dirty && form.controls.body.errors?.maxlength)\n                \">\n                                Caractères max: 500, Caractères Min: 5\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <!-- <button mat-raised-button type=\"submit\" class=\"btn btn-primary\">Valider</button> -->\n                <div>\n                    <button mat-raised-button [disabled]=\"processing\" type=\"button\" name=\"button\" (click)=\"goBack()\" class=\"btn btn-warning\">\n            Annuler\n          </button>\n\n                    <button mat-raised-button (submit)=\"updateBlogSubmit()\" [disabled]=\"processing\" type=\"submit\" name=\"button\" class=\"btn btn-success\">\n            Valider\n          </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","export * from './lib/authentication.module';\nexport * from './lib/containers/login/login.component';\nexport * from './lib/containers/register/register.component';\nexport * from './lib/containers/login/login.component';\nexport { AuthGuard } from './lib/guards/auth.guard';\nexport { NotAuthGuard } from './lib/guards/notAuth.guard';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'botmind-app-blogs',\n  templateUrl: './blogs.component.html',\n  styleUrls: ['./blogs.component.scss'],\n})\nexport class BlogsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<botmind-app-blog></botmind-app-blog>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'botmind-app-add-blog',\n  templateUrl: './add-blog.component.html',\n  styleUrls: ['./add-blog.component.scss']\n})\nexport class AddBlogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<botmind-app-add-blog-form></botmind-app-add-blog-form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '@botmind-app/service/auth';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'botmind-app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  user;\n  canDisplayField: boolean = false;\n  form: FormGroup;\n  currentUser: any;\n  processing: boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {\n    this.createForm();\n  }\n\n  modify() {\n    this.form.get('lastName').setValue(this.user.lastName);\n    this.form.get('firstName').setValue(this.user.firstName);\n    this.form.get('phoneNumber').setValue(this.user.phoneNumber);\n    this.form.get('username').setValue(this.user.username);\n    this.form.get('email').setValue(this.user.email);\n    return this.canDisplayField ? (this.canDisplayField = false) : (this.canDisplayField = true);\n  }\n\n  getUser() {\n    this.authService.getProfile().subscribe(response => (this.user = response.user));\n  }\n\n  deleteAccount() {\n    if (window.confirm('Êtes vous sûr de cette action ? elle est irreversible!')) {\n      this.authService.deleteAccount(this.user.username, this.user.email).subscribe(response => {\n        this.toastr.success(response.message, 'SUCCESS');\n        this.router.navigate(['/auth/login']);\n        localStorage.clear();\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  // Function to create registration form\n  createForm() {\n    this.form = this.formBuilder.group(\n      {\n        email: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(5),\n            Validators.maxLength(30),\n            this.validateEmail,\n          ]),\n        ],\n        username: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(15),\n            this.validateOrdinaryText,\n          ]),\n        ],\n        // Password Input\n        password: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(35),\n            this.validatePassword,\n          ]),\n        ],\n        firstName: [\n          '',\n\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(20),\n            this.validateOrdinaryText,\n          ]),\n        ],\n        lastName: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(20),\n            this.validateOrdinaryText,\n          ]),\n        ],\n        phoneNumber: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(20),\n            this.validatePhoneNumber,\n          ]),\n        ],\n        // Confirm Password Input\n        confirm: ['', Validators.required],\n      },\n      { validator: this.matchingPasswords('password', 'confirm') }\n    );\n  }\n\n  // Function to disable the registration form\n  disableForm(): void {\n    this.form.controls['email'].disable();\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n    this.form.controls['firstName'].disable();\n    this.form.controls['lastName'].disable();\n    this.form.controls['phoneNumber'].disable();\n    this.form.controls['confirm'].disable();\n  }\n\n  // Function to enable the registration form\n  enableForm(): void {\n    this.form.controls['email'].enable();\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n    this.form.controls['firstName'].enable();\n    this.form.controls['lastName'].enable();\n    this.form.controls['phoneNumber'].enable();\n    this.form.controls['confirm'].enable();\n  }\n\n  // Function to validate e-mail is proper format\n  validateEmail(controls) {\n    const regExp = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validateEmail: true };\n    }\n  }\n\n  // Function to validate username is proper format\n  validatePhoneNumber(controls) {\n    const regExp = new RegExp(\n      /^((\\+\\d{1,3}(-| )?\\(?\\d\\)?(-| )?\\d{1,5})|(\\(?\\d{2,6}\\)?))(-| )?(\\d{3,4})(-| )?(\\d{4})(( x| ext)\\d{1,5}){0,1}$/\n    );\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validatePhoneNumber: true };\n    }\n  }\n\n  validateOrdinaryText(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9 ]+$/);\n\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validateOrdinaryText: true };\n    }\n  }\n\n  validatePassword(controls) {\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validatePassword: true };\n    }\n  }\n\n  matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n      if (group.controls[password].value === group.controls[confirm].value) {\n        return null;\n      } else {\n        return { matchingPasswords: true };\n      }\n    };\n  }\n\n  checkEmail(): void {\n    const regExp = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    if (this.form.get('email').value !== '' && regExp.test(this.form.get('email').value)) {\n      this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\n        if (!data.success) {\n          this.toastr.error(data.message, 'MESSAGE');\n        } else {\n          this.toastr.success(data.message, 'MESSAGE');\n        }\n      });\n    }\n  }\n\n  checkUsername(): void {\n    if (this.form.get('username').value !== '' && this.form.get('username').value.length >= 3) {\n      this.authService.checkUsername(this.form.get('username').value).subscribe(data => {\n        if (!data.success) {\n          this.toastr.error(data.message, 'MESSAGE');\n        } else {\n          this.toastr.success(data.message, 'MESSAGE');\n        }\n      });\n    }\n  }\n\n  // Function to submit form\n  onRegisterSubmit() {\n    this.processing = true;\n    this.disableForm();\n    const user = {\n      email: this.form.get('email').value,\n      username: this.form.get('username').value,\n      password: this.form.get('password').value,\n      lastName: this.form.get('lastName').value,\n      firstName: this.form.get('firstName').value,\n      phoneNumber: this.form.get('phoneNumber').value,\n    };\n\n    this.authService.modifyProfile(user, this.user._id).subscribe(data => {\n      if (!data.success) {\n        this.toastr.error(data.message, 'MESSAGE');\n        this.processing = false;\n        this.enableForm();\n      } else {\n        this.getUser();\n        this.canDisplayField = false;\n        this.toastr.success(data.message, 'MESSAGE');\n        this.form.reset();\n      }\n    });\n  }\n}\n","<div class=\"container\">\n    <mat-card>\n        <mat-card-title>Mon profile</mat-card-title>\n        <mat-card-content>\n            <mat-list role=\"list\">\n                <mat-list-item role=\"listitem\">Nom: {{ user?.lastName }} </mat-list-item>\n                <mat-list-item role=\"listitem\">Prénom: {{ user?.firstName }}</mat-list-item>\n                <mat-list-item role=\"listitem\">Téléphone: {{ user?.phoneNumber }}</mat-list-item>\n                <mat-list-item role=\"listitem\">Identifiant: {{ user?.username }}</mat-list-item>\n                <mat-list-item role=\"listitem\">Email: {{ user?.email }}</mat-list-item>\n            </mat-list>\n            <div>\n                <button mat-raised-button (click)=\"modify()\" class=\"btn btn-primary\">\n          {{ this.canDisplayField ? 'Annuler' : 'Modifier' }}\n        </button>\n                <button mat-raised-button (click)=\"deleteAccount()\" color=\"warn\">Supprimer le compte</button>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<div *ngIf=\"this.canDisplayField\" class=\"container\">\n    <mat-card>\n        <mat-card-title>Modifier Mon Profile</mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"form\" (submit)=\"onRegisterSubmit()\" fxLayout=\"column\" fxLayoutAlign=\"center none\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Nom</mat-label>\n                    <input type=\"text\" matInput name=\"lastName\" autocomplete=\"off\" placeholder=\"Aklade\" formControlName=\"lastName\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.lastName.errors?.required || form.controls.lastName.dirty\">\n                                Ce champ est obligatoire\n                            </li>\n                            <li *ngIf=\"\n                  (form.controls.lastName.errors?.minlength && form.controls.lastName.dirty) ||\n                  (form.controls.lastName.errors?.maxlength && form.controls.lastName.dirty)\n                \">\n                                Caractères minimum autorisés: 3, Caractères maximum autorisés: 20\n                            </li>\n                            <li *ngIf=\"form.controls.lastName.errors?.validateOrdinaryText && form.controls.lastName.dirty\">\n                                Pas de caractères speciaux autorisés\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Prénom</mat-label>\n                    <input type=\"text\" matInput name=\"firstName\" autocomplete=\"off\" placeholder=\"Kouassi Sosthene\" formControlName=\"firstName\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.firstName.errors?.required || form.controls.firstName.dirty\">\n                                Ce champ est obligatoire\n                            </li>\n                            <li *ngIf=\"\n                  (form.controls.firstName.errors?.minlength && form.controls.firstName.dirty) ||\n                  (form.controls.firstName.errors?.maxlength && form.controls.firstName.dirty)\n                \">\n                                Caractères minimum autorisés: 3, Caractères maximum autorisés: 20\n                            </li>\n                            <li *ngIf=\"form.controls.firstName.errors?.validateOrdinaryText && form.controls.firstName.dirty\">\n                                Pas de caractères speciaux autorisés\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Numero de téléphone</mat-label>\n                    <input type=\"tel\" matInput name=\"phoneNumber\" autocomplete=\"off\" placeholder=\"+2250778942837\" formControlName=\"phoneNumber\" />\n                    <mat-error *ngIf=\"form.controls.phoneNumber.errors?.required || form.controls.phoneNumber.dirty\">\n                        Entrez un numéro de téléphone valide\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Identifiant</mat-label>\n                    <input type=\"text\" matInput name=\"username\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Username\" formControlName=\"username\" (blur)=\"checkUsername()\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.username.errors?.required || form.controls.username.dirty\">\n                                L'identifiant est obligatoire\n                            </li>\n                            <li *ngIf=\"\n                  (form.controls.username.errors?.minlength && form.controls.username.dirty) ||\n                  (form.controls.username.errors?.maxlength && form.controls.username.dirty)\n                \">\n                                Caractères minimum autorisés: 3, Caractères Maximum autorisés: 15\n                            </li>\n                            <li *ngIf=\"form.controls.username.errors?.validateOrdinaryText && form.controls.username.dirty\">\n                                L'identifiant ne doit pas contenir de caractères spéciaux!\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Email</mat-label>\n                    <input type=\"email\" matInput name=\"email\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*akladekouassi@gmail.com\" formControlName=\"email\" (blur)=\"checkEmail()\" />\n                    <mat-error>\n                        <ul class=\"help-block\">\n                            <li *ngIf=\"form.controls.email.errors?.required || form.controls.email.dirty\">L\"email est obligatoire</li>\n                            <li *ngIf=\"\n                  (form.controls.email.errors?.minlength && form.controls.email.dirty) ||\n                  (form.controls.email.errors?.maxlength && form.controls.email.dirty)\n                \">\n                                Caractères minimum autorisés: 5, Caractères Maximum autorisés: 30\n                            </li>\n                            <li *ngIf=\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\">\n                                Veillez saisir un email valide\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- Password Input -->\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Mot de passe</mat-label>\n                    <input matInput type=\"password\" name=\"password\" autocomplete=\"off\" placeholder=\"***********\" formControlName=\"password\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">\n                                Le mot de passe est obligatoire\n                            </li>\n                            <li *ngIf=\"\n                  (form.controls.password.errors?.minlength && form.controls.password.dirty) ||\n                  (form.controls.password.errors?.maxlength && form.controls.password.dirty)\n                \">\n                                Caractères minimum autorisés: 8, Caractères Maximum autorisés: 35\n                            </li>\n                            <li *ngIf=\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\">\n                                Une lettre majuscule au moins, un chiffre au moins et un caractère spécial au moins\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <!-- Validation -->\n\n                <!-- Confirm Password Input -->\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Mot de passe</mat-label>\n                    <input type=\"password\" matInput name=\"confirm\" autocomplete=\"off\" placeholder=\"************\" formControlName=\"confirm\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\">\n                                Veuillez confirmer le mot de passe\n                            </li>\n                            <li *ngIf=\"form.errors?.matchingPasswords && form.controls.confirm.dirty\">Password do not match</li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <!-- Validation -->\n                <button mat-raised-button [disabled]=\"!form.valid || processing\" (submit)=\"onRegisterSubmit()\" type=\"submit\" class=\"btn btn-primary\">\n          Valider\n        </button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { BlogsService } from '@botmind-app/service/blogs';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { BlogRegistrationPayload } from 'libs/data-models';\n\n@Component({\n  selector: 'botmind-app-add-blog-form',\n  templateUrl: './add-blog-form.component.html',\n  styleUrls: ['./add-blog-form.component.scss'],\n})\nexport class AddBlogFormComponent implements OnInit {\n  newPost = false;\n  loadingBlogs = false;\n  form;\n  commentForm;\n  processing = false;\n  blogPosts;\n  constructor(\n    private formBuilder: FormBuilder,\n    private blogService: BlogsService,\n    private toastr: ToastrService,\n    private router: Router,\n    private location: Location\n  ) {\n    this.createNewBlogForm();\n  }\n\n  // Function to create new blog form\n  createNewBlogForm() {\n    this.form = this.formBuilder.group({\n      title: ['', Validators.compose([Validators.required, Validators.maxLength(50), Validators.minLength(5)])],\n      body: ['', Validators.compose([Validators.required, Validators.maxLength(500), Validators.minLength(5)])],\n    });\n  }\n\n  // Enable new blog form\n  enableFormNewBlogForm() {\n    this.form.get('title').enable();\n    this.form.get('body').enable();\n  }\n\n  // Disable new blog form\n  disableFormNewBlogForm() {\n    this.form.get('title').disable();\n    this.form.get('body').disable();\n  }\n\n  // Reload blogs on current page\n  reloadBlogs() {\n    this.loadingBlogs = true;\n    this.getAllBlogs();\n    setTimeout(() => {\n      this.loadingBlogs = false;\n    }, 4000);\n  }\n\n  // Function to submit a new blog post\n  onBlogSubmit() {\n    this.processing = true;\n    this.disableFormNewBlogForm();\n    const currentUser = JSON.parse(localStorage.getItem('user'));\n\n    const blog: BlogRegistrationPayload = {\n      title: this.form.get('title').value,\n      body: this.form.get('body').value,\n      createdBy: currentUser._id,\n    };\n\n    this.blogService.newBlog(blog).subscribe(data => {\n      if (!data.success) {\n        this.toastr.error(data.message, 'ERROR');\n        this.processing = false;\n        this.enableFormNewBlogForm();\n      } else {\n        this.toastr.success(data.message, 'SUCCESS');\n        this.getAllBlogs();\n        setTimeout(() => {\n          this.router.navigate(['/blogs']);\n          this.processing = false;\n          this.form.reset();\n          this.enableFormNewBlogForm();\n        }, 2000);\n      }\n    });\n  }\n\n  // Function to go back to previous page\n  goBack() {\n    window.location.reload();\n    this.location.back();\n  }\n\n  // Function to get all blogs from the database\n  getAllBlogs() {\n    this.blogService.getAllBlogs().subscribe(data => {\n      this.blogPosts = data.blogs;\n    });\n  }\n  ngOnInit() {\n    this.getAllBlogs();\n  }\n}\n","<div class=\"container\">\n    <mat-card>\n        <mat-card-title>AJOUTER UN BLOG</mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"form\" name=\"blogForm\" (submit)=\"onBlogSubmit()\" fxLayout=\"column\" fxLayoutAlign=\"center none\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Titre du blog</mat-label>\n                    <input matInput type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"*Blog Title\" autocomplete=\"off\" formControlName=\"title\" />\n                    <mat-error>\n                        <ul class=\"help-block\">\n                            <li *ngIf=\"form.controls.title.dirty && form.controls.title.errors?.required\">This field is required.</li>\n                            <li *ngIf=\"\n                  (form.controls.title.dirty && form.controls.title.errors?.minlength) ||\n                  (form.controls.title.dirty && form.controls.title.errors?.maxlength)\n                \">\n                                Caractères Max: 50, Caractères Min: 5\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <!-- Password Input -->\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Contenu du blog</mat-label>\n                    <textarea matInput name=\"body\" rows=\"8\" cols=\"80\" placeholder=\"*Body\" class=\"form-control\" formControlName=\"body\"></textarea>\n\n                    <mat-error>\n                        <ul class=\"help-block\">\n                            <li *ngIf=\"form.controls.body.dirty && form.controls.body.errors?.required\">This field is required.</li>\n                            <li *ngIf=\"\n                  (form.controls.body.dirty && form.controls.body.errors?.minlength) ||\n                  (form.controls.body.dirty && form.controls.body.errors?.maxlength)\n                \">\n                                Max length: 500, Min length: 5\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mat-raised-button [disabled]=\"processing\" type=\"button\" name=\"button\" (click)=\"goBack()\" class=\"btn btn-warning\">\n            Annuler\n          </button>\n                    <button mat-raised-button (submit)=\"onBlogSubmit()\" [disabled]=\"processing || !form.valid\" type=\"submit\" name=\"button\" class=\"btn btn-success\">\n            Valider\n          </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; // Added\nimport { MaterialModule } from '@botmind-app/material';\n\nimport { LoginComponent } from './containers/login/login.component';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { RegisterComponent } from './containers/register/register.component';\nimport { RegisterFormComponent } from './components/register-form/register-form.component';\nimport { AuthService, AuthInterceptor } from '@botmind-app/service/auth';\n\n@NgModule({\n  imports: [CommonModule, MaterialModule, BrowserAnimationsModule, ReactiveFormsModule],\n  providers: [\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  declarations: [LoginComponent, LoginFormComponent, RegisterComponent, RegisterFormComponent],\n})\nexport class AuthenticationModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","export * from './lib/material.module';\n","export * from './lib/blogs.service';\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '@botmind-app/service/auth';\n\n@Injectable()\nexport class NotAuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate() {\n    if (this.authService.loggedIn()) {\n      this.router.navigate(['/auth/login']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","export * from './lib/auth.service';\nexport { AuthService } from './lib/auth.service';\nexport * from './lib/auth.interceptor';\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '@botmind-app/service/auth';\nimport { Router } from '@angular/router';\nimport { AuthGuard } from '@botmind-app/authentication';\n\n@Component({\n  selector: 'botmind-app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  processing = false;\n  form: FormGroup;\n  previousUrl;\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private authGuard: AuthGuard,\n    private toastr: ToastrService\n  ) {\n    this.createForm();\n  }\n\n  // Function to create login form\n  createForm() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  // Function to disable form\n  disableForm() {\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n  }\n\n  // Function to enable form\n  enableForm() {\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n  }\n\n  // Functiont to submit form and login user\n  onLoginSubmit() {\n    this.processing = true;\n    this.disableForm();\n    const user = {\n      username: this.form.get('username').value,\n      password: this.form.get('password').value,\n    };\n    this.authService.login(user.username, user.password).subscribe(\n      data => {\n        if (!data.success) {\n          this.form.reset();\n          this.toastr.error(data.msg, 'MESSAGE');\n          this.processing = false;\n          this.enableForm();\n        } else {\n          this.form.reset();\n          this.authService.storeUserData(data);\n          this.toastr.success(data.message, 'MESSAGE');\n          setTimeout(() => {\n            this.enableForm();\n            this.router.navigate(['/blogs']);\n          }, 2000);\n        }\n      },\n      error => {\n        setTimeout(() => {\n          this.processing = false;\n          this.enableForm();\n        }, 2000);\n        this.toastr.error('Utilisateur introuvable', 'MESSAGE');\n      }\n    );\n  }\n\n  ngOnInit() {\n    if (this.authGuard.redirectUrl) {\n      this.toastr.error('Vous devez être connecté pour acceder à cette page.', 'MESSAGE');\n      this.previousUrl = this.authGuard.redirectUrl;\n      this.authGuard.redirectUrl = undefined;\n    }\n  }\n}\n","<div class=\"container\">\n    <mat-card>\n        <mat-card-title>CONNEXION</mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"form\" (submit)=\"onLoginSubmit()\" fxLayout=\"column\" fxLayoutAlign=\"center none\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Identifiant</mat-label>\n                    <input type=\"text\" matInput name=\"username\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Username\" formControlName=\"username\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.username.errors?.required || form.controls.username.dirty\">\n                                L'identifiant est obligatoire\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <!-- Password Input -->\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Mot de passe</mat-label>\n                    <input matInput type=\"password\" name=\"password\" autocomplete=\"off\" placeholder=\"***********\" formControlName=\"password\" />\n                    <mat-error>\n                        <ul>\n                            <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">\n                                Le mot de passe est obligatoire\n                            </li>\n                        </ul>\n                    </mat-error>\n                </mat-form-field>\n                <!-- Validation -->\n                <button mat-raised-button [disabled]=\"!form.valid || processing\" type=\"submit\" class=\"btn btn-primary\">\n          Valider\n        </button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'botmind-app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<botmind-app-layout>\n    <router-outlet></router-outlet>\n</botmind-app-layout>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}